[tool:pytest]
# Test discovery and execution
testpaths = tests
python_files = test_*.py *_test.py
python_functions = test_*
python_classes = Test*

# Minimum Python version
minversion = 3.8

# Addopts for default pytest behavior
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --cov=../src
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=term-missing
    --cov-fail-under=80
    --html=reports/pytest_report.html
    --self-contained-html
    --json-report
    --json-report-file=reports/pytest_report.json

# Markers for test categorization
markers =
    unit: Unit tests for individual functions/methods
    integration: Integration tests between components
    api: API endpoint tests
    auth: Authentication and authorization tests
    email: Email handling tests
    analysis: AI analysis functionality tests
    rules: Email filtering rules tests
    reports: Report generation tests
    monitoring: System monitoring tests
    performance: Performance and load tests
    security: Security and vulnerability tests
    slow: Tests that take a long time to run
    external: Tests that require external services
    database: Tests that require database connection
    redis: Tests that require Redis connection
    mock: Tests using mocked dependencies
    
# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:jose
    ignore::UserWarning:passlib
    
# Asyncio configuration
asyncio_mode = auto

# Coverage configuration
[coverage:run]
source = ../src
omit = 
    ../src/tests/*
    ../src/scripts/*
    ../src/migrations/*
    ../src/*/__pycache__/*
    
[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    
[coverage:html]
directory = htmlcov